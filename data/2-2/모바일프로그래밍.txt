In this course, students will learn basic programming skills for mobile devices where AI can be applied. Considering recent trends in mobile programming technology, this course primarily focuses on hands-on experience with cross-platform programming with 'Flutter.' Flutter is a cross-platfrom programming tool developed by Google, which allows developers to create apps that run on Android, iPhone, Windows, Linux, and other devices using a single codebase. It is widely adopted in the industry today. Students will also learn Google's Dart language to use flutter, in the early part of the semester. While Dart is not complex, considering the practical nature of this course, it is not recommended for students who have not completed any basic programming courses, such as Python or Java.이 강의는 인공지능의 잠재적인 활용처인 모바일 기기의 기초적인 프로그래밍 실력을 함양하기 위한 프로그래밍 수업입니다. 최근의 모바일 프로그래밍 기술의 동향을 고려하여, '플러터(Flutter)'를 활용한 크로스플랫폼 프로그래밍 방법에 대해서 주로 실습합니다. '플러터'는 구글에서 개발한 크로스플랫폼 프로그래밍 도구로서, 안드로이드/아이폰/윈도우 및 기타 다른 기기에서 동작하는 앱을 하나의 코드로 구현할 수 있어 최근 현업에서 많이 사용하고 있습니다. 플러터를 사용하기 위해서, 여러분은 구글에서 개발한 '다트(Dart)'언어를 학기 초반에 학습하게 됩니다. 다트 언어 자체는 복잡하지 않지만, 실습을 중심으로 진행되는 강의 특성을 고려하여, 기초 프로그래밍 교과목(Python 또는 Java)을 하나도 이수하지 않은 경우에는 수강을 권장하지 않습니다.

Basic Programming course(기초 프로그래밍), Object-oriented programming(객체지향 프로그래밍)

1. Hands-on experience of cross-platform programming with Flutter.플러터(Flutter)를 활용한 크로스플랫폼 프로그래밍 경험을 제공하고, 반복된 연습을 통해 익숙하게 합니다.2. Understanding the difference between Flutter programming and Kotlin-based Android programming.플러터를 활용한 크로스플랫폼 프로그래밍과 일반 안드로이드 프로그래밍의 차이를 이해합니다.

1. Through the final project, students can gain knowledge and experience in the overall process of planning, designing, and developing their desired app.학생 여러분은 원하는 앱을 기획, 디자인 및 개발하는 과정 전반에 대한 지식과 경험을 기말 프로젝트를 통해 얻을 수 있습니다.2. Students can gain cross-platform programming experience using Flutter, which is widely used in the industry recently.최근 현업에서 많이 사용하는 플러터를 활용한 크로스 플랫폼 프로그래밍 경험을 얻을 수 있습니다.3. Through experience with a new language and new framework, you can gain development experience that will prepare you for various changes you may encounter in the future.새로운 언어와 새로운 프레임워크에 대한 경험을 통해, 이후 마주하게 되는 다양한 변화에 대비할 수 있는 개발경험을 얻을 수 있습니다.
